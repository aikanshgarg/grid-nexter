 >>> Emmet magic
 	- .feature{feature $}*6
 	- (figure.gallery__item.gallery__item--$>img.gallery__img[src="img/gal-$.jpeg"][alt="Gallery image $"])*14

- To get the node modules folder from package.json file: sudo npm install

-  universal reset using *? Because that should get rid of unexpected paddings and margins, and especially of their differences between browsers.

- Steps:
	1. Analyze the no. of unique parts (8 column layout, in our case)
	2. Make a rough layout of these using grid
	3. Use only responsive units like %, vh, vw, min-content etc. NO PIXELS. 

- We don't usually define the no. of rows, only columns do the work for us, mostly(implicit rows added by CSS grid)

- Better over Flexbox when we need to give spaces b/w elements as in flexbox we'll need margin while here we have grid-gap!

- Images should always be responisve and given width in %

- NEW THINGS:
	1. extends (typography)
	2. modifiers (typography)
	3. Object-fit: cover; for fitting the images inside a cell, figure element (gallery.scss)
	4. Image overlay with bg image linear gradient(header)