.header {
	font-family: $font-display;
	background-color: $color-grey-dark-1;
	grid-column: full-start / col-end 6;

	background-image: linear-gradient(rgba($color-secondary,.93), rgba($color-secondary,.93)), url(../img/hero.jpeg);
	background-size: cover;
	background-position: center;
	padding: 8rem;
	padding-top: 4rem;

	display: grid; // 2nd level
	grid-template-rows: 1fr min-content minmax(min-content, 6rem) 1fr; 
	// 1st row: giving all space available to nexter logo
	// 2nd row: least amount of space for content for your own home:
	// 3rd row: at least have space for content(break into new line when needed) or give 60px height when available
	// 4th row: giving all space available to button. REST 2 rows are implicitly defined by CSS itself
	grid-template-columns: minmax(min-content,max-content);// for responsive width 
	grid-row-gap: 1.5rem;
	justify-content: center;

	// spanning the column all over the screen width
	@media only screen and (max-width: $bp-medium) {
		grid-column: 1 / -1;
	}

	@media only screen and (max-width: $bp-small) {
		padding: 5rem;
	}


	&__logo {
		height: 3rem;
		justify-self: center;
	}

	&__seenon-text {
		font-family: $font-primary;
		color: $color-grey-light-2;
		font-size: 1.6rem;

		display: grid;
		grid-template-columns: 1fr max-content 1fr;
		grid-column-gap: 1.5rem;
		align-items: center; // vertically align

		&::before,
		&::after {
			content: "";
			display: block;
			height: 1px;
			background-color: currentColor;
		}
	}

	&__seenon-logos {
		display: grid;
		grid-template-columns: repeat(4, 1fr);
		grid-column-gap: 3rem;
		justify-items: center;
		align-items: center; // each logo item is centered inside grid along Y axis
		
		img {
			max-height: 2.5rem; // height can scale down (max-height makes it responsive)
			max-width: 100%; // for maintaining aspect ratio ( responsive)
			filter: brightness(70%);
		}
	}

	&__btn {
		align-self: start;
		justify-self: start;
	}


}